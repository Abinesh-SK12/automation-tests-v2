name: Cypress Tests

on: 
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'  
    - cron: '30 10 * * *'    # 4:00 PM IST  


jobs:
  cypress-run:
    runs-on: ubuntu-22.04

    # ‚Üê Add these env vars so pnpm always uses dev registry & skips SSL checks
    env:
      NPM_CONFIG_REGISTRY: https://npm.dev.lmesacademy.net
      NPM_CONFIG_STRICT_SSL: false

    strategy:
      max-parallel: 1
      matrix:
        node-version: [20.x]  

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # (No need for a separate "configure registry" step now)

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Cache Cypress Binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Install Cypress
        run: npx cypress install
        shell: bash

      - name: Verify Cypress Installation
        run: npx cypress verify
        shell: bash

      - name: Run Cypress Tests (Recorded)
        run: npx cypress run --record --key ${{ secrets.CYPRESS_RECORD_KEY }} --spec "cypress/e2e/**/*.cy.js"

      - name: Send Slack Notification (via Webhook)
        if: always()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          STATUS_COLOR: ${{ job.status == 'success' && '#36a64f' || '#ff0000' }}
        run: |
          IST_TIME=$(TZ=Asia/Kolkata date '+%d %B %Y, %I:%M %p IST')
          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"channel\": \"C092F988WRL\",
            \"username\": \"Cypress Bot\",
            \"icon_emoji\": \":rocket:\",
            \"attachments\": [
              {
                \"color\": \"${STATUS_COLOR}\",
                \"text\": \":rocket: *Cypress Test Report* - [uptor.in/workshops](https://uptor.in/workshops)\n:white_check_mark: *Status:* \`${{ job.status }}\`\nüë§ *Author:* \`Abinesh_Sk\`\nüîó *Commit:* <https://github.com/${{ github.repository }}/commit/${{ github.sha }}|View Commit>\nüîç *Workflow Run:* <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>\n‚è∞ *Date & Time:* \`${IST_TIME}\`\" 
              }
            ]
          }" $SLACK_WEBHOOK

  test-cron-job:
    runs-on: ubuntu-22.04
    steps:
      - name: Log Current Time (Cron Test)
        run: echo "‚è∞ Cron test ran at $(date)"
